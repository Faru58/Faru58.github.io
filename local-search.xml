<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>函数重载</title>
    <link href="/2022/05/03/%E5%87%BD%E6%95%B0%E9%87%8D%E8%BD%BD/"/>
    <url>/2022/05/03/%E5%87%BD%E6%95%B0%E9%87%8D%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<p>2022.5.2</p><span id="more"></span><p><strong>#函数重载</strong></p><p>重点知识点：<br><strong>函数重载</strong><br>概念： 同一个语句块中，函数名相同，参数数量、类型、顺序不同的函数 就称为函数重载<br>注意： 和返回值无关<br>作用： 一般用来处理不同参数的同一类型的逻辑处理</p><p><strong>#练习题</strong></p><img src="/2022/05/03/%E5%87%BD%E6%95%B0%E9%87%8D%E8%BD%BD/exam.jpg" class=""><p>以下是答案：</p><div class="code-wrapper"><pre><code class="hljs">using System;namespace Lesson10_函数重载练习题&#123;    internal class Program    &#123;        #region 练习题1        static int CompareNum(int a, int b)        &#123;            return a &gt; b ? a : b;        &#125;        static float CompareNum(float a, float b)        &#123;            return a &gt; b ? a : b;        &#125;        static double CompareNum(double a, double b)        &#123;            return a &gt; b ? a : b;        &#125;        #endregion        #region 练习题2        static int CompareArray(int[] arr)        &#123;            int max = arr[0];            for (int i = 1; i &lt; arr.Length; i++)            &#123;                if (arr[i] &gt; max)                    max = arr[i];            &#125;            return max;        &#125;        static float CompareArray(float[] arr)        &#123;            float max = arr[0];            for (int i = 1; i &lt; arr.Length; i++)            &#123;               if (arr[i] &gt; max)                   max = arr[i];            &#125;            return max;        &#125;        static double CompareArray(double[] arr)        &#123;            double max = arr[0];            for (int i = 1; i &lt; arr.Length; i++)            &#123;                f (arr[i] &gt; max)                   max = arr[i];            &#125;            return max;        &#125;        #endregion        static void Main(string[] args)        &#123;            Console.WriteLine(&quot;函数重载练习题&quot;);            #region 练习题1            Console.WriteLine(CompareNum(5, 7));            Console.WriteLine(CompareNum(10.9f, 4.5f));            Console.WriteLine(CompareNum(20.975, 100.45));            #endregion            #region 练习题2            int[] arrInt = &#123; 1, 4, 5, 8, 6 &#125;;            Console.WriteLine(CompareArray(arrInt));            float[] arrFloat = &#123; 2.1f, 4.5f, 5.9f, 8.1f, 5.8f &#125;;            Console.WriteLine(CompareArray(arrFloat));            double[] arrDouble = &#123; 1.2, 4.5, 5.8, 8.4, 6.6, 8.5 &#125;;            Console.WriteLine(CompareArray(arrDouble));            #endregion        &#125;    &#125;&#125;</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>study</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022年5月2日</title>
    <link href="/2022/05/02/2022%E5%B9%B45%E6%9C%882%E6%97%A5/"/>
    <url>/2022/05/02/2022%E5%B9%B45%E6%9C%882%E6%97%A5/</url>
    
    <content type="html"><![CDATA[<p>为什么没有干劲</p><span id="more"></span><p>有一说一也是怠惰的一天，早上睡懒觉，下午半吊子审稿，晚上还去跑了步，现在两公里对痔疮还是太伤了。</p><p>回到为什么没有干劲的问题。<br>我感觉还是并不能从心底接受（心の底から受け入れる）我现在做的事情。<br>其实我感觉我今天审稿的水平还是有点进步的，起码能看出点问题，但是应该还是远远不及吧。<br>我真的适合科研吗？我不知道。<br>现在离入学满一年，还差4个月。<br>这个问题仍是没有答案。<br>跑完步也想了想自己要是当老师要如何与学生沟通，不管怎么说，也不会像Mr.李一样，几乎和我没有交流吧。</p><p>有空是不是也可以学学Blender呢？</p><p>看黑猫玩创轨也想玩了，但是档在转移PS5的时候丢失了。<br>尝试着写写自己的游戏大纲吧，系统先不论，总得有个故事。</p><p>已经决定不看过去，未来就要时刻展望。</p>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>变长参数和参数默认值</title>
    <link href="/2022/05/02/%E5%8F%98%E9%95%BF%E5%8F%82%E6%95%B0%E5%92%8C%E5%8F%82%E6%95%B0%E9%BB%98%E8%AE%A4%E5%80%BC/"/>
    <url>/2022/05/02/%E5%8F%98%E9%95%BF%E5%8F%82%E6%95%B0%E5%92%8C%E5%8F%82%E6%95%B0%E9%BB%98%E8%AE%A4%E5%80%BC/</url>
    
    <content type="html"><![CDATA[<p>2022.5.2</p><span id="more"></span><p><strong>#变长参数和参数默认值</strong></p><p>重点知识点：<br><strong>1 变长参数关键字 params</strong><br>作用： 可以传入n个同类型参数 n可以是0<br>注意：<br>    1.params 后面必须是数组 意味着只能是同一类型的可变参数<br>    2.变长参数只能有一个<br>    3.必须在所有参数后面写变长参数</p><p><strong>2 参数默认值（可选参数）</strong><br>作用：可以给参数默认值 使用时可以不传参 不传用默认的 传了用传的<br>注意：<br>    1.可选参数可以有多个<br>    2.正常参数必须写在可选参数前面，可选参数只能写在所有参数的后面</p><p><strong>#练习题</strong></p><img src="/2022/05/02/%E5%8F%98%E9%95%BF%E5%8F%82%E6%95%B0%E5%92%8C%E5%8F%82%E6%95%B0%E9%BB%98%E8%AE%A4%E5%80%BC/exam.jpg" class=""><p>以下是答案：</p><div class="code-wrapper"><pre><code class="hljs">using System;namespace Lesson9_变长参数和参数默认值练习题&#123;    internal class Program    &#123;        #region 练习题1        static void SumAndAvg(params int[] arr)        &#123;            int sum = 0;            for (int i = 0; i &lt; arr.Length; i++)            &#123;                sum += arr[i];            &#125;            double avg = sum / (double)arr.Length;            Console.WriteLine(&quot;它们的和为&#123;0&#125;,平均数为&#123;1&#125;&quot;, sum, avg);        &#125;        #endregion        #region 练习题2        static void OddEven(params int[] arr)        &#123;            int odd = 0, even = 0;            for (int i = 0; i &lt; arr.Length; i++)            &#123;                if(arr[i] % 2 == 0)                &#123;                    even += arr[i];                &#125;                else                &#123;                    odd += arr[i];                &#125;            &#125;            Console.WriteLine(&quot;奇数和为&#123;0&#125;,偶数和为&#123;1&#125;&quot;, odd, even);        &#125;        #endregion        static void Main(string[] args)        &#123;            Console.WriteLine(&quot;变长参数和参数默认值练习题&quot;);            #region 练习题1            SumAndAvg(5, 9, 11, 52);            #endregion            #region 练习题2            OddEven(10, 11, 12);            #endregion        &#125;&#125;</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>study</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ref和out</title>
    <link href="/2022/05/02/ref%E5%92%8Cout/"/>
    <url>/2022/05/02/ref%E5%92%8Cout/</url>
    
    <content type="html"><![CDATA[<p>2022.5.1</p><span id="more"></span><p>#ref和out</p><p>重点知识点：<br>1.ref和out的作用: 解决值类型和引用类型 在函数内部 改值 或者 重新声明 能够影响外部传入的变量 让其也被修改<br>2.使用上: 就是在声明参数的时候 前面加上ref和out的 关键字即可 使用时同上<br>3.区别：<br> 1.ref传入的变量必须初始化  out不用<br> 2.out传入的变量必须在内部赋值  ref不用</p><p>#练习题</p><img src="/2022/05/02/ref%E5%92%8Cout/exam.jpg" class=""><p>以下是答案：</p><div class="code-wrapper"><pre><code class="hljs">static bool Login(int user, int key, ref string info)    &#123;        if(user == 0)        &#123;            //用户名正确的逻辑            if(key == 0)            &#123;                //用户名正确且密码正确的逻辑                info = &quot;登录成功&quot;;            &#125;            else            &#123;                //密码错误的逻辑                info = &quot;密码错误&quot;;                return false;            &#125;        &#125;        else        &#123;            //用户名错误的逻辑            info = &quot;用户名错误&quot;;            return false;        &#125;               return true;    &#125;static void Main(string[] args)    &#123;        Console.WriteLine(&quot;请输入用户名和密码&quot;);            int user = int.Parse(Console.ReadLine());            int key = int.Parse(Console.ReadLine());            string info = &quot;&quot;; //ref需要初始化            while (!Login(user, key, ref info)) //若登录失败继续尝试            &#123;                Console.WriteLine(info); //登录失败直接进入循环 打印登陆失败                Console.WriteLine(&quot;请输入用户名和密码&quot;);                user = int.Parse(Console.ReadLine()); //不需要再声明                key = int.Parse(Console.ReadLine());            &#125;            Console.WriteLine(info);    &#125;</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>study</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022年5月1日</title>
    <link href="/2022/05/01/2022%E5%B9%B45%E6%9C%881%E6%97%A5/"/>
    <url>/2022/05/01/2022%E5%B9%B45%E6%9C%881%E6%97%A5/</url>
    
    <content type="html"><![CDATA[<p>劳动节快乐</p><span id="more"></span><p>#更新1</p><p>今天是51，兴许也该说声51快乐，大家都有各自的烦恼，无条件的快乐想必也没有那么容易吧。<br>早上也是晚晚的起床，也不能说什么都不想干，只是总感觉累累的，感觉什么都做不好罢了。倒也不能说是什么压力太大喘不过气，其实也只是让我审稿罢了，我一直想混日子度过3年时光，但说实话到现在还没混明白，主要就是感觉自己没那水平，做不好。确实是沟通太少了，不明白我导究竟是什么想法，虽然我也不觉得他会很坦诚的和我说。大家都挺不容易的，做好自己的事情都已经精一杯了，但至少我现在不迷茫了，不是吗。下周努努力，把稿子审了，把论文用LaTeX写了，加油吧，后面还有困难的强化学习等着我。<br>在想需不需要再专门做个学习记录，感觉也可以，慢慢来吧，虽然时间不多，但也正如一恒说的要注意身体，老爹说的不要着急。至少，还有人没有放弃我。</p><p>#更新2</p><p>学了ref 和 out，属于是刷新了学C的时候的指针的概念，有点牛逼。最后还是把早坂爱强氪出来了，唉，我这脑子也得修修了，钱也不是大风刮来的。<br>下午想着自己不适合搞研究，但是也是突然想起来小昭（前野智昭）说的，最开始工作的时候都是挺折磨的，铆足了劲想着做好，直到干了18年，才能身心投入享受工作，我也是缺少这一种过程吧，只能说再加把劲吧。</p>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一份垃圾</title>
    <link href="/2022/04/30/%E7%AC%AC%E4%B8%80%E4%BB%BD%E5%9E%83%E5%9C%BE/"/>
    <url>/2022/04/30/%E7%AC%AC%E4%B8%80%E4%BB%BD%E5%9E%83%E5%9C%BE/</url>
    
    <content type="html"><![CDATA[<p>开始倒垃圾</p><span id="more"></span><p>#更新1</p><p>昨夜3点入眠，还在做着今早去不去实验室的思想斗争，结果8点半自然醒了，一股怨气油然而生，随即想睡个回笼觉，可再也没睡着。磨蹭到10点起床，想起昨晚说要弄个博客试试，搞了近两小时，也算是配置了个雏形。</p><p>过后试试调整下首页，午饭也不想去食堂吃了，中午稍微快进下看完泡泡，下午做完核酸就去实验室画个图，晚上再继续学C#，不知道我的转码之路能不能成功。</p><p>今晚再说，祝好。</p><p>#更新2</p><p>下午画了一张图，累累的，周报也就写了一点，感觉就这样了，随便扒拉两口饭就会去学C#。</p><p>#更新3</p><p>现在是深夜2点45，说实话确实打撸很累，也不应该熬夜。<br>把零碎的时间拼起来，帮王羽检查了错别字，还把函数知识点学完了，也算是不错的结束，明天是51，希望能开心度过，毕竟一会又要审稿了，不久之后就要研二的我，是否又能担起重任。</p><div class="code-wrapper"><pre><code class="hljs">函数语法 static 返回类型 函数名(参数类型 参数名1, 参数名2, ......)</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/04/30/hello-world/"/>
    <url>/2022/04/30/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
